
rule reverse {
  pattern { N[VerbForm=Fin]; M [VerbForm=Inf]; N -[FINV]-> M; e: M -[INFV]-> O;  }
  commands {
    add_edge new_e: M -> N;
    new_e.label = e.label;
    del_edge e;
  }
}


package test_package {

rule subclause_infinitive_copula {
    pattern {

      % nodes
      H[upos=AUX]; 
      AUX[upos=AUX]; 
      PRED[upos=ADP];

      % dependencies
      * -[FINV]-> H;  % sjekk om det finnes "lavere dependent" sÃ¸keuttrykk 
      e: H -[INFV]-> AUX; 
      e1: AUX -[SPRED]-> PRED;

    }
    commands {

      shift H ==> PRED;
      add_edge f1: PRED -> H; f1.label = aux;
      add_edge re1: PRED -> AUX; re1.label = e1.label; 
      del_edge e1;

    }
  }

}


strat main { Onf (test_package)}
